name: Model Optimization Test

on:
  pull_request:
    paths:
      - 'src/tccc/llm_analysis/**'
      - 'src/tccc/utils/tensor_optimization.py'
      - 'src/tccc/utils/jetson_optimizer.py'
      - 'verification_script_llm_analysis.py'
  workflow_dispatch:

jobs:
  model-optimization-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run model optimization tests
        run: |
          python verification_script_phi2_whisper.py --mock-mode
          
      - name: Test tensor optimizations
        run: |
          python -m pytest tests/test_tensor_optimization.py -v
          
      - name: Generate optimization report
        run: |
          echo "## Model Optimization Results" > optimization_report.md
          echo "" >> optimization_report.md
          echo "### Phi-2 Model Performance" >> optimization_report.md
          grep "Inference time:" phi_model_benchmarks.txt | awk '{print "- " $0}' >> optimization_report.md || echo "- No benchmark data available" >> optimization_report.md
          echo "" >> optimization_report.md
          echo "### Memory Usage" >> optimization_report.md
          grep "Memory usage:" phi_model_benchmarks.txt | awk '{print "- " $0}' >> optimization_report.md || echo "- No memory data available" >> optimization_report.md
          
      - name: Add optimization report to PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('optimization_report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });